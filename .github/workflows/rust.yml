name: Rust CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    strategy:
      matrix:
        rust: ["1.34.2", stable, beta, nightly]
        command: [build, test]
        runs-on: [ubuntu-latest, 	windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - run: rustup default ${{ matrix.rust }}
    - name: build
      run: |
        cargo build --verbose
        cargo doc --verbose
      env:
        FEATURES: ${{ matrix.features }}
  mips_cross:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: rustup default ${{ matrix.rust }}
    - name: add_cross_target
      run: >
        rustup target add $CROSS_TARGET
      env:
        CROSS_TARGET: mips64-unknown-linux-gnuabi64
    - name: run
      run: >
        cargo build --all-features --target $CROSS_TARGET
    - name: doc
  test_all:
    steps:
    - uses: actions/checkout@v2
    - run: rustup default ${{ matrix.rust }}
    - name: test
      run: >
        cargo test -v --tests --benches --all-features
      if: ${{ matrix.rust != '1.34.2' }}
  rustfmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt
    - name: Run rustfmt check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check
